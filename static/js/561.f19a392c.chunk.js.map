{"version":3,"file":"static/js/561.f19a392c.chunk.js","mappings":"8PAGaA,EAAaC,EAAAA,EAAAA,KAAH,+KAUVC,EAAYD,EAAAA,EAAAA,GAAH,8GAaTE,EAAYF,EAAAA,EAAAA,MAAH,wFAOTG,EAAQH,EAAAA,EAAAA,MAAH,yE,SC8ClB,MAvEA,YAAwD,IAAlCI,EAAiC,EAAjCA,SAAiC,IAAvBC,YAAAA,OAAuB,SAC/CC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UACnBG,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAe3B,OACE,UAACb,EAAD,CAAYK,SAdO,SAAAS,GACnBA,EAAMC,iBAEN,IAAMC,GAAQ,mBACPV,GAAe,CAAEW,KAAMV,EAAaW,QAAQC,QADrC,IAEZC,MAAOX,EAAcS,QAAQC,MAC7BE,SAAUX,EAAiBQ,QAAQC,QAErCd,EAASW,GAETF,EAAMQ,OAAOC,OACd,EAGC,WAEE,SAACrB,EAAD,UAAYI,EAAc,UAAY,YACrCA,EAAc,MACb,UAACH,EAAD,YACE,qDACA,SAACC,EAAD,CACEoB,KAAK,OACLP,KAAK,OACLQ,YAAa,iEACbC,IAAKnB,EACLoB,UAAQ,QAId,UAACxB,EAAD,YACE,gEACA,kBACEqB,KAAK,QACLP,KAAK,QACLQ,YAAa,wEACbC,IAAKjB,EACLkB,UAAQ,QAGZ,UAACxB,EAAD,YACE,sEACA,kBACEqB,KAAK,WACLP,KAAK,WACLW,UAAW,EACXH,YAAa,kFACbC,IAAKhB,EACLiB,UAAQ,QAIZ,mBAAQE,SAAqB,YAAXlB,EAAsBa,KAAK,SAA7C,SAEGlB,EAAc,UAAY,YAEjB,YAAXK,IAAwB,SAACmB,EAAA,EAAD,MAI9B,C,sGCtCD,UA1BA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAavB,EAAAA,EAAAA,IAAYwB,EAAAA,IACzBC,GAAQzB,EAAAA,EAAAA,IAAY0B,EAAAA,IAY1B,OAVAC,EAAAA,EAAAA,YAAU,WACHJ,GAELF,EAAS,YACV,GAAE,CAACE,EAAYF,KAOd,2BACa,OAAVI,IACG,wDAAgCA,MAEpC,SAAC,IAAD,CAAYhC,SATI,SAAAW,GAClBe,GAASS,EAAAA,EAAAA,IAAaxB,GACvB,EAOsCV,aAAW,MAGnD,C","sources":["components/SignUpForm/SignUpForm.styled.js","components/SignUpForm/SignUpForm.jsx","pages/SignIn/SignIn.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 500px;\n  width: 100%;\n  margin: 0 auto 25px;\n  background-color: #f2f2f2;\n `;\n\nexport const FormTitle = styled.h2`\nfont-size: 25px;\n    font-weight: 500;\n    text-align: center;\n    margin: 0;\n    `;\n\n//     export const LabelGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-start;\n// `;\n\nexport const FormInput = styled.label`\ndisplay: flex;\n    gap: 12px;\n    align-items: center;\n    \n`;\n\nexport const Input = styled.input`\n&placeholrer{\n    backgroundColor: #c3bef0;\n}\n`;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatus } from 'redux/userSlice/selectors';\nimport Loader from 'components/Loader/Loader';\nimport { StyledForm, FormTitle, FormInput, Input} from './SignUpForm.styled';\n\nfunction SignUpForm({ onSubmit, isLoginForm = false }) {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      ...(!isLoginForm && { name: nameInputRef.current.value }),\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      \n      <FormTitle>{isLoginForm ? 'Sign In' : 'Sign Up'}</FormTitle>\n      {isLoginForm ? null : (\n        <FormInput>\n          <span>Ім'я: </span>\n          <Input \n            type=\"text\"\n            name=\"name\"\n            placeholder={\"Введіть ім'я\"}\n            ref={nameInputRef}\n            required\n          />\n        </FormInput>\n      )}\n      <FormInput>\n        <span>Емейл: </span>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder={'Введіть cвій e-mail'}\n          ref={emailInputRef}\n          required\n        />\n      </FormInput>\n      <FormInput>\n        <span>Пароль: </span>\n        <input\n          type=\"password\"\n          name=\"password\"\n          minLength={7}\n          placeholder={'Введіть пароль'}\n          ref={passwordInputRef}\n          required\n        />\n      </FormInput>\n\n      <button disabled={status === 'pending'} type=\"submit\">\n        {/* {status === 'pending' && <StyledFormLoader />} */}\n        {isLoginForm ? 'Sign In' : 'Sign Up'}\n      </button>\n      {status === 'pending' && <Loader />}\n      \n    </StyledForm>\n  );\n}\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SignUpForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { loginRequest } from 'redux/userSlice/userSlice';\nimport { selectAuthError, selectIsLoggedIn } from 'redux/userSlice/selectors';\n\nimport  SignUpForm  from 'components/SignUpForm/SignUpForm';\n\nfunction SignInPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = formData => {\n    dispatch(loginRequest(formData));\n  };\n\n  return (\n    <div>\n      {error !== null && (\n          <p>Oops, some error occured... {error}</p>\n      )}\n      <SignUpForm onSubmit={handleLogin} isLoginForm />\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"names":["StyledForm","styled","FormTitle","FormInput","Input","onSubmit","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","status","useSelector","selectStatus","event","preventDefault","formData","name","current","value","email","password","target","reset","type","placeholder","ref","required","minLength","disabled","Loader","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectIsLoggedIn","error","selectAuthError","useEffect","loginRequest"],"sourceRoot":""}